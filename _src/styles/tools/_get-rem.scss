// ================================
// Tools: Get rem
// ================================

/// Convert values into rem units. Only `px` values are converted to rem.
///
/// @param {string} $unit-values - Unit values. Can be single, mix, or group of 3 or 4.
/// @param {string} $base-size [$font-size-base-rem] - Set unit base, or defaults to defined value in settings.
///
/// @group tools
///
/// @example scss - Use with single or multiple units
///  font-size: rem(20px);
///  padding: rem(20px 50px);
///
/// @example scss - Use with a base unit size
///  font-size: rem(20px, 10px);
///

@function rem($unit-values, $base-size: $font-size-base-rem) {
  // Create an empty list that we can dump values into
  $rem-values: ();

  @each $value in $unit-values {
    // Check to see if value is 0, auto, or inherited
    // If so, do nothing and output value
    @if $value == 0 or $value == auto or $value == inherit {
      $rem-values: append($rem-values, $value);
    }

    // If the value is a pixel, convert to rem value
    @else if unit($value) == 'px' {
      $rem-values: append($rem-values, #{($value/$base-size)}rem);
    }

    // If the value is unitless, assume it is a px value and convert to rem value
    @else if unitless($value) {
      $rem-values: append($rem-values, #{($value/stripped-unit($base-size))}rem);
    }

    // For everything else, keep as is
    @else {
      $rem-values: append($rem-values, $value);
    }
  }

  @return $rem-values;
}
